/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ImageInformation } from './ImageInformation';
import {
    ImageInformationFromJSON,
    ImageInformationFromJSONTyped,
    ImageInformationToJSON,
} from './ImageInformation';

/**
 * 
 * @export
 * @interface ImageGenerationProgress
 */
export interface ImageGenerationProgress {
    /**
     * 
     * @type {string}
     * @memberof ImageGenerationProgress
     */
    type?: ImageGenerationProgressTypeEnum;
    /**
     * 
     * @type {{ [key: string]: ImageInformation; }}
     * @memberof ImageGenerationProgress
     */
    images: { [key: string]: ImageInformation; };
    /**
     * 
     * @type {number}
     * @memberof ImageGenerationProgress
     */
    progress: number;
    /**
     * 
     * @type {number}
     * @memberof ImageGenerationProgress
     */
    performance: number;
}


/**
 * @export
 */
export const ImageGenerationProgressTypeEnum = {
    progress: 'progress'
} as const;
export type ImageGenerationProgressTypeEnum = typeof ImageGenerationProgressTypeEnum[keyof typeof ImageGenerationProgressTypeEnum];


/**
 * Check if a given object implements the ImageGenerationProgress interface.
 */
export function instanceOfImageGenerationProgress(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "images" in value;
    isInstance = isInstance && "progress" in value;
    isInstance = isInstance && "performance" in value;

    return isInstance;
}

export function ImageGenerationProgressFromJSON(json: any): ImageGenerationProgress {
    return ImageGenerationProgressFromJSONTyped(json, false);
}

export function ImageGenerationProgressFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageGenerationProgress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'images': (mapValues(json['images'], ImageInformationFromJSON)),
        'progress': json['progress'],
        'performance': json['performance'],
    };
}

export function ImageGenerationProgressToJSON(value?: ImageGenerationProgress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'images': (mapValues(value.images, ImageInformationToJSON)),
        'progress': value.progress,
        'performance': value.performance,
    };
}

