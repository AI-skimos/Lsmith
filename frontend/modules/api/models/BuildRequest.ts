/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BuildRequest
 */
export interface BuildRequest {
    /**
     * 
     * @type {string}
     * @memberof BuildRequest
     */
    model_id: string;
    /**
     * 
     * @type {string}
     * @memberof BuildRequest
     */
    subfolder?: string;
    /**
     * 
     * @type {string}
     * @memberof BuildRequest
     */
    hf_token?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BuildRequest
     */
    fp16?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildRequest
     */
    verbose?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BuildRequest
     */
    opt_image_height?: number;
    /**
     * 
     * @type {number}
     * @memberof BuildRequest
     */
    opt_image_width?: number;
    /**
     * 
     * @type {number}
     * @memberof BuildRequest
     */
    max_batch_size?: number;
    /**
     * 
     * @type {number}
     * @memberof BuildRequest
     */
    onnx_opset?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BuildRequest
     */
    build_static_batch?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildRequest
     */
    build_dynamic_shape?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildRequest
     */
    build_preview_features?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildRequest
     */
    force_engine_build?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildRequest
     */
    force_onnx_export?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildRequest
     */
    force_onnx_optimize?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildRequest
     */
    onnx_minimal_optimization?: boolean;
}

/**
 * Check if a given object implements the BuildRequest interface.
 */
export function instanceOfBuildRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "model_id" in value;

    return isInstance;
}

export function BuildRequestFromJSON(json: any): BuildRequest {
    return BuildRequestFromJSONTyped(json, false);
}

export function BuildRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BuildRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'model_id': json['model_id'],
        'subfolder': !exists(json, 'subfolder') ? undefined : json['subfolder'],
        'hf_token': !exists(json, 'hf_token') ? undefined : json['hf_token'],
        'fp16': !exists(json, 'fp16') ? undefined : json['fp16'],
        'verbose': !exists(json, 'verbose') ? undefined : json['verbose'],
        'opt_image_height': !exists(json, 'opt_image_height') ? undefined : json['opt_image_height'],
        'opt_image_width': !exists(json, 'opt_image_width') ? undefined : json['opt_image_width'],
        'max_batch_size': !exists(json, 'max_batch_size') ? undefined : json['max_batch_size'],
        'onnx_opset': !exists(json, 'onnx_opset') ? undefined : json['onnx_opset'],
        'build_static_batch': !exists(json, 'build_static_batch') ? undefined : json['build_static_batch'],
        'build_dynamic_shape': !exists(json, 'build_dynamic_shape') ? undefined : json['build_dynamic_shape'],
        'build_preview_features': !exists(json, 'build_preview_features') ? undefined : json['build_preview_features'],
        'force_engine_build': !exists(json, 'force_engine_build') ? undefined : json['force_engine_build'],
        'force_onnx_export': !exists(json, 'force_onnx_export') ? undefined : json['force_onnx_export'],
        'force_onnx_optimize': !exists(json, 'force_onnx_optimize') ? undefined : json['force_onnx_optimize'],
        'onnx_minimal_optimization': !exists(json, 'onnx_minimal_optimization') ? undefined : json['onnx_minimal_optimization'],
    };
}

export function BuildRequestToJSON(value?: BuildRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'model_id': value.model_id,
        'subfolder': value.subfolder,
        'hf_token': value.hf_token,
        'fp16': value.fp16,
        'verbose': value.verbose,
        'opt_image_height': value.opt_image_height,
        'opt_image_width': value.opt_image_width,
        'max_batch_size': value.max_batch_size,
        'onnx_opset': value.onnx_opset,
        'build_static_batch': value.build_static_batch,
        'build_dynamic_shape': value.build_dynamic_shape,
        'build_preview_features': value.build_preview_features,
        'force_engine_build': value.force_engine_build,
        'force_onnx_export': value.force_onnx_export,
        'force_onnx_optimize': value.force_onnx_optimize,
        'onnx_minimal_optimization': value.onnx_minimal_optimization,
    };
}

